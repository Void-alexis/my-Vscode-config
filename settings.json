{
    /*
        ==================================================
        --------------------------------------------------
        ------------- DEFAULT PRESET SETTINGS -=----------
        --------------------------------------------------
        ==================================================
    */


    //  ------------ vscode animation effect configuration -----------
    "vscode_custom_css.imports": [
        "file:///C:/Users/alexis/.vscode/extensions/be5invis.vscode-custom-css-7.4.2/src/index.js"
    ],

    "animations.Install-Method": "Custom UI Style",
    
    // ------------ custom ui style configuration ------------
    "custom-ui-style.external.imports": [
        "file:///c:/Users/alexis/.vscode/extensions/brandonkirbyson.vscode-animations-2.0.7/dist/updateHandler.js"
    ],
    
    // set color for vim mode show in the status bar
    "custom-ui-style.stylesheet": {
        /* Apply styles based on aria-label in the footer */
        "#vscodevim\\.vim\\.primary": "padding: 0 4px;",
        "#vscodevim\\.vim\\.primary[aria-label='Already at oldest change']": "background-color: #475569; color: #d1d5db;",
        "#vscodevim\\.vim\\.primary[aria-label^='-- NORMAL']": "background-color: #8FBCBB; color: #434C5E;",
        "#vscodevim\\.vim\\.primary[aria-label='-- INSERT --']": "background-color: #BF616A; color: #e5e7eb;",
        "#vscodevim\\.vim\\.primary[aria-label='-- VISUAL --'], #vscodevim\\.vim\\.primary[aria-label='-- VISUAL LINE --']": "background-color: #B48EAD; color: #e5e7eb;",
        "#vscodevim\\.vim\\.primary[aria-label='-- VISUAL BLOCK --']": "background-color: #A3BE8C; color: #434C5E;",
        "#vscodevim\\.vim\\.primary[aria-label='-- REPLACE --']": "background-color: #D08770; color: #434C5E;",
        "#vscodevim\\.vim\\.primary[aria-label='-- EASYMOTION INPUT --'], #vscodevim\\.vim\\.primary[aria-label='-- SURROUND INPUT --']": "background-color: #007ACC; color: #e5e7eb;",
        "#vscodevim\\.vim\\.primary[aria-label^=':'], #vscodevim\\.vim\\.showcmd": "color: #fafafa;"
    },
    //  ----------- background configuration ---------
    "background.editor": {
        "useFront": true,
        "style": {
            "background-position": "center",
            "background-size": "cover",
            "opacity": 0.1
        },
        "images": [
            "file:///D:/Users/wallpaper/737474.png"
        ],
        "interval": 0,
        "random": false
    },

    //  --------- vim configuration ------------
    /* 
        @ In this section, I enable vim-easyMotion, vim-airline, vim-commentary, vim-indent-object, vim-sneak

        Vim-camelCaseMotion:
            [Usage]: <operator>i<leader>w	Select/change/delete/etc. the current camelCase or snake_case word segment
            [Example]: d2i\w would delete the current and next camelCase word segment.

        Vim-surround:
            [Usage]: cs<existing><desired> the current word segment and add surrounding characters
                     ds<existing>	Remove surrounding characters
                     cs<existing>t<number> surrounding characters with <number></number>
            [Example]:

        Vim-sneak:
            [Usage]: s<character>	Search for the next occurrence of <character> in the current line
            [Example]: s<character> would search for the next occurrence of <character> in the current line.
            [Trikes]: You can use this command to substitute the vim-command 'f' and 'F' for faster searching.

        Vim-easyMotion:
            [Usage]:    <leader><leader> s <char> search character in the current section that you can see from the editor
                        <leader><leader> f <char> search character forwards
                        <leader><leader> F <char> search character backwards
                        <leader><leader> t <char> search character forwards and jump to the character before it
                        <leader><leader> T <char> search character backwards and jump to the character after it
                        <leader><leader> w <char> start of word forwards 
                        <leader><leader> b <char> start of word backwards
                        <leader><leader> e <char> end of word forwards
                        <leader><leader> ge <char> end of word backwards
                        <leader><leader> j <char> start of line forwards
                        <leader><leader> k <char> start of line backwards
                        <leader><leader> /<char>... search n-character
                        <leader><leader><leader> j jump to anywhere, default behavior matches & ending of word, camelCase, after '_' and after '#'

        Vim-commentary:
            [Usage]: gc<space>	Comment the current line or selected lines
                     gC<space>	Block Comment the current line or selected lines
            [Trikes]: gcc to toggle line comment for the current line
                      gc2j to toggle line comment for the current line and the next line
                      gCi to comment out everything within parentheses

        Vim-textobj-arguments:
            [Usage]: <leader>i<textobj>	Select/change/delete/etc. the current text object
            [Example]: 'cia' - change the argument under the cursor while preserving separators like ','
                       'daa' - will delete the whole argument under the cursor and the separators if applicable
            [Trikes]: you add number behind or before the <operator> to delete arguments with the same number 

            
        Vim.gdefault
            [Make] :substitute command can toggle all matches in the current line
            [Example]:    ':s/foo/bar/g '        
                        when 'g' flag added, all match in the current line will be replaced
                        when 'g' flag not added, only the first match in the current line will be replaced
            More information about search and replace by using substitute command: https://www.baeldung.com/linux/vim-search-replace


        [Trikes]:   gd - jump to definition
                    gh - show hover equivalent ot hovering your mouse over wherever the cursor is 
                    gb - to select the current word
    */

    "vim.leader": "<space>",
    
    "vim.easymotion": true,

    "vim.surround": true,

    "vim.camelCaseMotion.enable": true,

    "vim.sneak": true,

    "vim.replaceWithRegister": true,

    "vim.useSystemClipboard": true,
    
    //  highlight matched text
    "vim.hlsearch": false,

    //  enable highlighting when yanking
    "vim.highlightedyank.enable": true,
    
    // set yanked color duration
    "vim.highlightedyank.duration": 250,

    // re-configure vim-command:substitute
    "vim.gdefault": true,


    //  keybinding remapping(non-recursive)
    "vim.normalModeKeyBindingsNonRecursive": [
        {
            "before": ["<C-h>"],
            "commands": ["workbench.action.previousEditor"]
        },
        {
            "before": ["<C-l>"],
            "commands": ["workbench.action.nextEditor"]
        },
        {
            "before": ["<leader>", "s", "v"],
            "after": [":", "v", "s", "<Enter>"]
        },
        {
            "before": ["<leader>", "s", "p"],
            "after": [":", "s", "p", "<Enter>"]
        },
        {
            "before": ["<leader>", "k"],
            "after": ["<C-w>", "k"]
        },
        {
            "before": ["<leader>", "j"],
            "after": ["<C-w>", "j"]
        },
        {
            "before": ["<leader>", "h"],
            "after": ["<C-w>", "h"]
        },
        {
            "before": ["<leader>", "l"],
            "after": ["<C-w>", "l"]
        },
        {
            "before": ["<C-j>"],
            "after": ["1", "0", "j"]
        },
        {
            "before": ["<C-k>"],
            "after": ["1", "0", "k"]
        },
        {
            "before": ["H"],
            "after": ["^"]
        },
        {
            "before": ["L"],
            "after": ["$"]
        },
    ], 

    // -------------- vscode settings configuration -----------


    // open extensions sync
    "settingsSync.ignoredExtensions": [
        "mgwg.light-pink-theme"
    ],

    "editor.wordWrap": "on",

    // terminal font
    "terminal.integrated.fontFamily": "MesloLGM Nerd Font Propo Regular",

    // font size
    "editor.fontSize": 20,

    //  enable mouseWheelZoom 
    "editor.mouseWheelZoom": true,

    //  enable relative lineNumber
    "editor.lineNumbers": "relative",

    "editor.inlineSuggest.enabled": true,

    //  background color for highlight of line at cursor position
    "workbench.colorCustomizations": {
        "editor.lineHighlightBackground": "#000000",
        "gitlens.trailingLineBackgroundColor": "#000000",
        "gitlens.trailingLineForegroundColor": "#2bff00df",
        "editorHoverWidget.foreground": "#fff",
        "editorHoverWidget.border": "#00ffee9e",
        "editorSuggestWidget.background": "#000000",
        "editorSuggestWidget.selectedForeground": "#000000",
        "editorSuggestWidget.focusHighlightForeground": "#0000ff",
        "editorSuggestWidget.selectedBackground": "#c9c2c2",
        "editorHoverWidget.highlightForeground": "#f60000",
    }, 


    "extensions.experimental.affinity": {
        "vscodevim.vim": 1
    },



    //  --------- cmake configuration ----------
    "cmake.pinnedCommands": [
        "workbench.action.tasks.configureTaskRunner",
        "workbench.action.tasks.runTask"
    ],

    "cmake.additionalCompilerSearchDirs": [
        "D:\\Development\\mingw64\\bin"
    ],

    // --------- powermode configuration --------------

    "powermode.enabled": true,
    "powermode.shake.enabled": false,
    "powermode.presets": "particles",
    "powermode.explosions.offset": 0.25,
    "powermode.combo.counterEnabled": "hide",
    "powermode.combo.location": "off",

    //  ------------- gitlens configuration -------------

    "gitlens.codeLens.scopes": [
        "containers",
        "blocks",
        "document"
    ],
    "gitlens.heatmap.locations": [
        "gutter",
        "overview"
    ],
    "gitlens.changes.locations": [
        "gutter",
        "overview"
    ],

    /*
        ====================================================
        ----------------------------------------------------
        -------------- FOR JAVA-WEB DEVELOPMENT -------------
        ----------------------------------------------------
        ====================================================
    */

    //  -------------- live server configuration ------------
    "liveServer.settings.donotVerifyTags": true,

    // --------------- betterAlign configuration -------------
    "betterAlign.surroundSpace": {
        "colon": [
            1,
            2
        ],
        "assignment": [
            1,
            2
        ],
        "arrow": [
            1,
            1
        ],
        "comment": 4
    },

    // -------------- icon theme configuration -------------
    "workbench.iconTheme": "vscode-icons-mac",

    // -------------- java configuation -------------------

    // set java home path
    "java.jdt.ls.java.home": "D:/Development/JDKS/jdk-21.0.6",
    "redhat.telemetry.enabled": false,

}

